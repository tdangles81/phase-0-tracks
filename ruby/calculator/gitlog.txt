ruby :> cd calculator

calculator :> ls
calculator.rb     calculator.rb.zip

calculator :> subl calculator.rb

calculator :> subl calculator.rb

calculator :> ruby calculator
calculator.rb      calculator.rb.zip  

calculator :> ruby calculator.rb
Add an equation with the format: '1 + 5'. Program performs sum, difference, and product calculations.
50
calculator.rb:4:in `calculator': wrong number of arguments (1 for 3) (ArgumentError)
	from calculator.rb:41:in `<main>'

calculator :> ruby calculator.rb
Add an equation with the format: '1 + 5'. Program performs sum, difference, and product calculations.

["10", "+", "10"]

calculator :> ruby calculator.rb
Add an equation with the format: '1 + 5'. Program performs sum, difference, and product calculations.
20 + 20
["20", "+", "20"]

calculator :> ruby calculator.rb
Add an equation with the format: '1 + 5'. Program performs sum, difference, and product calculations.
10 + 10
["10", "+", "10"]
["10 + 10"]
20
[20]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
20 * 20
Calculations performed:
10 + 10 = 20

calculator :> ruby calculator.rb
Add an equation with the format: '1 + 5'. Program performs sum, difference, and product calculations.
100 * 100
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
20 + 12
Calculations performed:
100 * 100 = 10000
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
30 + 30
Calculations performed:
100 * 100 = 10000
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
^[[A
Calculations performed:
100 * 100 = 10000
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
done
Calculations performed:
100 * 100 = 10000
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
done
Calculations performed:
100 * 100 = 10000
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.

Calculations performed:
100 * 100 = 10000
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.

Calculations performed:
100 * 100 = 10000
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
exit
Calculations performed:
100 * 100 = 10000
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
dhshw555
Calculations performed:
100 * 100 = 10000
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.

Calculations performed:
100 * 100 = 10000
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
**&^^
Calculations performed:
100 * 100 = 10000
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.

Calculations performed:
100 * 100 = 10000
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
calculator.rb:28:in `calculator': undefined method `chomp' for nil:NilClass (NoMethodError)
	from calculator.rb:42:in `convert_to_equation'
	from calculator.rb:46:in `<main>'

calculator :> ruby calculator.rb
Add an equation with the format: '1 + 5'. Program performs sum, difference, and product calculations.
100 * 100
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
20 + 50
Calculations performed:
100 * 100 = 10000
20 + 50
["20", "+", "50"]
["20 + 50"]
70
[70]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
30 * 30
Calculations performed:
20 + 50 = 70
75 -2
["75", "-2"]
["75 -2 "]
Your math could use some work, or program doesn't handle this kind of equation. Try again.
[nil]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
75 - 2
Calculations performed:
75 -2  = 
75 - 2
["75", "-", "2"]
["75 - 2"]
73
[73]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.

Calculations performed:
75 - 2 = 73
calculator.rb:43:in `convert_to_equation': undefined method `chomp' for nil:NilClass (NoMethodError)
	from calculator.rb:47:in `<main>'

calculator :> ruby calculator.rb
Add an equation with the format: '1 + 5'. Program performs sum, difference, and product calculations.
100 * 100
["100", "*", "100"]
["100 * 100"]
10000
[10000]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
Calculations performed:
100 * 100 = 10000
20 + 50
["20", "+", "50"]
["20 + 50"]
70
[70]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
Calculations performed:
20 + 50 = 70
30 + 90
["30", "+", "90"]
["30 + 90"]
120
[120]
Add a new equation with the format: '1 + 5'. Input 'done' to check eq'ns.
Calculations performed:
30 + 90 = 120
done

calculator :> ruby calculator.rb
Add an equation with the format: '1 + 5'. Program performs sum, difference, and product calculations.
20 * 20
["20", "*", "20"]
["20 * 20"]
400
[400]
50 + 20
["50", "+", "20"]
["50 + 20"]
70
[70]
30 * 30
["30", "*", "30"]
["30 * 30"]
900
[900]
20 + 20
["20", "+", "20"]
["20 + 20"]
40
[40]

